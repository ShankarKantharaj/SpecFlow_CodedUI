// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject7
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// GDrive - Use 'GDriveParams' to pass parameters into this method.
        /// </summary>
        public void GDrive()
        {
            #region Variable Declarations
            WinButton uICognizantAutomationFButton = this.UIRunningapplicationsWindow.UIRunningapplicationsToolBar.UICognizantAutomationFButton;
            WinEdit uISearchorenteraddressEdit = this.UIMyDriveGoogleDriveMoWindow.UIItemComboBox.UISearchorenteraddressEdit;
            HtmlCustom uIHeadercommonCustom = this.UIMSNUKHotmailOutlookSWindow.UIMSNUKHotmailOutlookSDocument.UIHeadercommonCustom;
            WinEdit uIAddressandsearchusinEdit = this.UIMSNUKHotmailOutlookSWindow.UIAddressBarClient.UIAddressandsearchusinEdit;
            HtmlEdit uIQEdit = this.UIMSNUKHotmailOutlookSWindow.UIMSNUKHotmailOutlookSDocument.UIQEdit;
            HtmlHyperlink uIOneNoteHyperlink = this.UIMSNUKHotmailOutlookSWindow.UIMSNUKHotmailOutlookSDocument.UIMainCustom.UIOneNoteHyperlink;
            BrowserWindow uIMSNUKHotmailOutlookSWindow = this.UIMSNUKHotmailOutlookSWindow;
            HtmlImage uIScHomePagei710153961Image = this.UIMSNUKHotmailOutlookSWindow.UIMSNUKHotmailOutlookSDocument.UIMainCustom.UIScHomePagei710153961Image;
            HtmlEdit uIEmailEdit = this.UIMSNUKHotmailOutlookSWindow.UIMeetGoogleDriveOneplDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIMSNUKHotmailOutlookSWindow.UIMeetGoogleDriveOneplDocument.UIPasswordEdit;
            HtmlInputButton uISigninButton = this.UIMSNUKHotmailOutlookSWindow.UIMeetGoogleDriveOneplDocument.UISigninButton;
            HtmlEdit uIPasswordEdit1 = this.UIMSNUKHotmailOutlookSWindow.UIMeetGoogleDriveOneplDocument1.UIPasswordEdit;
            WinButton uINotforthissiteButton = this.UIMSNUKHotmailOutlookSWindow.UINotificationToolBar.UINotforthissiteButton;
            HtmlDiv uICodeduiPane = this.UIMSNUKHotmailOutlookSWindow.UIMyDriveGoogleDriveDocument.UIDrive_main_pagePane.UICodeduiPane;
            HtmlDiv uINewfolderPane = this.UIMSNUKHotmailOutlookSWindow.UIMyDriveGoogleDriveDocument.UINewfolderPane;
            HtmlDiv uINewfolderUploadfilesPane = this.UIMSNUKHotmailOutlookSWindow.UIMyDriveGoogleDriveDocument.UINewfolderUploadfilesPane;
            HtmlDiv uIUploadfilesPane = this.UIMSNUKHotmailOutlookSWindow.UIMyDriveGoogleDriveDocument.UIUploadfilesPane;
            HtmlDiv uIUploadfilesPane1 = this.UIMSNUKHotmailOutlookSWindow.UIMyDriveGoogleDriveDocument.UIUploadfilesPane.UIUploadfilesPane1;
            WinTreeItem uIDownloadsTreeItem = this.UIChooseFiletoUploadWindow.UITreeViewWindow.UITreeViewTree.UIDesktopTreeItem.UIThisPCTreeItem.UIDownloadsTreeItem;
            WinEdit uINameEdit = this.UIChooseFiletoUploadWindow.UIItemWindow.UITestDataListItem.UINameEdit;
            WinButton uIOpenButton = this.UIChooseFiletoUploadWindow.UIOpenWindow.UIOpenButton;
            #endregion

            // Last mouse action was not recorded.

            // Last mouse action was not recorded.

            // Last mouse action was not recorded.

            // Right-Click 'CognizantAutomationFramwork - Microsoft Visual Stu...' button
            Mouse.Click(uICognizantAutomationFButton, MouseButtons.Right, ModifierKeys.None, new Point(62, 50));

            // Right-Click 'CognizantAutomationFramwork - Microsoft Visual Stu...' button
            Mouse.Click(uICognizantAutomationFButton, MouseButtons.Right, ModifierKeys.None, new Point(62, 50));

            // Click 'Search or enter address' text box
            Mouse.Click(uISearchorenteraddressEdit, new Point(1036, 18));

            // Type 'Control + c' in 'Search or enter address' text box
            Keyboard.SendKeys(uISearchorenteraddressEdit, this.GDriveParams.UISearchorenteraddressEditSendKeys, ModifierKeys.Control);

            // Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
            this.UIMSNUKHotmailOutlookSWindow.LaunchUrl(new System.Uri(this.GDriveParams.UIMSNUKHotmailOutlookSWindowUrl));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'header-common' custom control at (1, 1)
            Mouse.Hover(uIHeadercommonCustom, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Type 'https://drive.google.com/drive/my-drive' in 'Address and search using Bing' text box
            uIAddressandsearchusinEdit.Text = this.GDriveParams.UIAddressandsearchusinEditText;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'header-common' custom control at (1, 1)
            Mouse.Hover(uIHeadercommonCustom, new Point(1, 1));

            // Mouse hover 'q' text box at (1, 1)
            Mouse.Hover(uIQEdit, new Point(1, 1));

            // Mouse hover 'OneNote' link at (1, 1)
            Mouse.Hover(uIOneNoteHyperlink, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'https://accounts.google.com/ServiceLogin?service=wise&passive=1209600&continue=https://drive.google.com/drive/my-drive&followup=https://drive.google.com/drive/my-drive'
            uIMSNUKHotmailOutlookSWindow.NavigateToUrl(new System.Uri(this.GDriveParams.UIMSNUKHotmailOutlookSWindowUrl1));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover '/sc/HomePage/i/71/015396167bb5e7dd935c6776d4b2ba.j...' image at (1, 1)
            Mouse.Hover(uIScHomePagei710153961Image, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Type 'rangawillb4u' in 'Email' text box
            uIEmailEdit.Text = this.GDriveParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.GDriveParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.GDriveParams.UIPasswordEditPassword;

            // Click 'Sign in' button
            Mouse.Click(uISigninButton, new Point(178, 41));

            // Type '********' in 'Password' text box
            uIPasswordEdit1.Password = this.GDriveParams.UIPasswordEditPassword1;

            // Type '{Enter}' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit1, this.GDriveParams.UIPasswordEditSendKeys, ModifierKeys.None);

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Not for this site' button
            Mouse.Click(uINotforthissiteButton, new Point(63, 25));

            // Mouse hover '. codedui' pane at (1, 1)
            Mouse.Hover(uICodeduiPane, new Point(1, 1));

            // Click 'Not for this site' button
            Mouse.Click(uINotforthissiteButton, new Point(63, 25));

            // Last mouse action was not recorded.

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Right-Click '. codedui' pane
            Mouse.Click(uICodeduiPane, MouseButtons.Right, ModifierKeys.None, new Point(1216, 615));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'New folder...' pane at (1, 1)
            Mouse.Hover(uINewfolderPane, new Point(1, 1));

            // Mouse hover 'New folder... Upload files.' pane at (1, 1)
            Mouse.Hover(uINewfolderUploadfilesPane, new Point(1, 1));

            // Mouse hover 'Upload files...' pane at (1, 1)
            Mouse.Hover(uIUploadfilesPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Upload files...' pane
            Mouse.Click(uIUploadfilesPane1, new Point(20, 1));

            // Click 'Desktop' -> 'This PC' -> 'Downloads' tree item
            Mouse.Click(uIDownloadsTreeItem, new Point(83, 19));

            // Click 'Name' text box
            Mouse.Click(uINameEdit, new Point(63, 13));

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(117, 35));
        }
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinControl uIThepageatwwwdemoguruDialog = this.UIThepageatwwwdemoguruWindow.UIThepageatwwwdemoguruDialog;
            #endregion

            // Click 'The page at www.demo.guru99.com says:' Dialog
            Mouse.Click(uIThepageatwwwdemoguruDialog, new Point(1038, 296));
        }
        
        #region Properties
        public virtual GDriveParams GDriveParams
        {
            get
            {
                if ((this.mGDriveParams == null))
                {
                    this.mGDriveParams = new GDriveParams();
                }
                return this.mGDriveParams;
            }
        }
        
        public UIRunningapplicationsWindow UIRunningapplicationsWindow
        {
            get
            {
                if ((this.mUIRunningapplicationsWindow == null))
                {
                    this.mUIRunningapplicationsWindow = new UIRunningapplicationsWindow();
                }
                return this.mUIRunningapplicationsWindow;
            }
        }
        
        public UIMyDriveGoogleDriveMoWindow UIMyDriveGoogleDriveMoWindow
        {
            get
            {
                if ((this.mUIMyDriveGoogleDriveMoWindow == null))
                {
                    this.mUIMyDriveGoogleDriveMoWindow = new UIMyDriveGoogleDriveMoWindow();
                }
                return this.mUIMyDriveGoogleDriveMoWindow;
            }
        }
        
        public UIMSNUKHotmailOutlookSWindow UIMSNUKHotmailOutlookSWindow
        {
            get
            {
                if ((this.mUIMSNUKHotmailOutlookSWindow == null))
                {
                    this.mUIMSNUKHotmailOutlookSWindow = new UIMSNUKHotmailOutlookSWindow();
                }
                return this.mUIMSNUKHotmailOutlookSWindow;
            }
        }
        
        public UIChooseFiletoUploadWindow UIChooseFiletoUploadWindow
        {
            get
            {
                if ((this.mUIChooseFiletoUploadWindow == null))
                {
                    this.mUIChooseFiletoUploadWindow = new UIChooseFiletoUploadWindow();
                }
                return this.mUIChooseFiletoUploadWindow;
            }
        }
        
        public UIThepageatwwwdemoguruWindow UIThepageatwwwdemoguruWindow
        {
            get
            {
                if ((this.mUIThepageatwwwdemoguruWindow == null))
                {
                    this.mUIThepageatwwwdemoguruWindow = new UIThepageatwwwdemoguruWindow();
                }
                return this.mUIThepageatwwwdemoguruWindow;
            }
        }
        #endregion
        
        #region Fields
        private GDriveParams mGDriveParams;
        
        private UIRunningapplicationsWindow mUIRunningapplicationsWindow;
        
        private UIMyDriveGoogleDriveMoWindow mUIMyDriveGoogleDriveMoWindow;
        
        private UIMSNUKHotmailOutlookSWindow mUIMSNUKHotmailOutlookSWindow;
        
        private UIChooseFiletoUploadWindow mUIChooseFiletoUploadWindow;
        
        private UIThepageatwwwdemoguruWindow mUIThepageatwwwdemoguruWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'GDrive'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class GDriveParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + c' in 'Search or enter address' text box
        /// </summary>
        public string UISearchorenteraddressEditSendKeys = "c";
        
        /// <summary>
        /// Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
        /// </summary>
        public string UIMSNUKHotmailOutlookSWindowUrl = "http://go.microsoft.com/fwlink/p/?LinkId=255141";
        
        /// <summary>
        /// Type 'https://drive.google.com/drive/my-drive' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditText = "https://drive.google.com/drive/my-drive";
        
        /// <summary>
        /// Go to web page 'https://accounts.google.com/ServiceLogin?service=wise&passive=1209600&continue=https://drive.google.com/drive/my-drive&followup=https://drive.google.com/drive/my-drive'
        /// </summary>
        public string UIMSNUKHotmailOutlookSWindowUrl1 = "https://accounts.google.com/ServiceLogin?service=wise&passive=1209600&continue=ht" +
            "tps://drive.google.com/drive/my-drive&followup=https://drive.google.com/drive/my" +
            "-drive";
        
        /// <summary>
        /// Type 'rangawillb4u' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "rangawillb4u";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "qXVqkIu73jYVlQ82vNObLKHxcy8nEA4V";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword1 = "qXVqkIu73jYePrLWC7IbkR/bc02DE4Vp";
        
        /// <summary>
        /// Type '{Enter}' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRunningapplicationsWindow : WinWindow
    {
        
        public UIRunningapplicationsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Running applications";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskSwWClass";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public UIRunningapplicationsToolBar UIRunningapplicationsToolBar
        {
            get
            {
                if ((this.mUIRunningapplicationsToolBar == null))
                {
                    this.mUIRunningapplicationsToolBar = new UIRunningapplicationsToolBar(this);
                }
                return this.mUIRunningapplicationsToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRunningapplicationsToolBar mUIRunningapplicationsToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRunningapplicationsToolBar : WinToolBar
    {
        
        public UIRunningapplicationsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Running applications";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public WinButton UICognizantAutomationFButton
        {
            get
            {
                if ((this.mUICognizantAutomationFButton == null))
                {
                    this.mUICognizantAutomationFButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICognizantAutomationFButton.SearchProperties[WinButton.PropertyNames.Name] = "CognizantAutomationFramwork - Microsoft Visual Studio";
                    this.mUICognizantAutomationFButton.WindowTitles.Add("Running applications");
                    #endregion
                }
                return this.mUICognizantAutomationFButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICognizantAutomationFButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMyDriveGoogleDriveMoWindow : WinWindow
    {
        
        public UIMyDriveGoogleDriveMoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "My Drive - Google Drive - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("My Drive - Google Drive - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIItemComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("My Drive - Google Drive - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UISearchorenteraddressEdit
        {
            get
            {
                if ((this.mUISearchorenteraddressEdit == null))
                {
                    this.mUISearchorenteraddressEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUISearchorenteraddressEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Search or enter address";
                    this.mUISearchorenteraddressEdit.WindowTitles.Add("My Drive - Google Drive - Mozilla Firefox");
                    #endregion
                }
                return this.mUISearchorenteraddressEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUISearchorenteraddressEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMSNUKHotmailOutlookSWindow : BrowserWindow
    {
        
        public UIMSNUKHotmailOutlookSWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
            this.WindowTitles.Add("Meet Google Drive – One place for all your files");
            this.WindowTitles.Add("My Drive - Google Drive");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMSNUKHotmailOutlookSDocument UIMSNUKHotmailOutlookSDocument
        {
            get
            {
                if ((this.mUIMSNUKHotmailOutlookSDocument == null))
                {
                    this.mUIMSNUKHotmailOutlookSDocument = new UIMSNUKHotmailOutlookSDocument(this);
                }
                return this.mUIMSNUKHotmailOutlookSDocument;
            }
        }
        
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIMeetGoogleDriveOneplDocument UIMeetGoogleDriveOneplDocument
        {
            get
            {
                if ((this.mUIMeetGoogleDriveOneplDocument == null))
                {
                    this.mUIMeetGoogleDriveOneplDocument = new UIMeetGoogleDriveOneplDocument(this);
                }
                return this.mUIMeetGoogleDriveOneplDocument;
            }
        }
        
        public UIMeetGoogleDriveOneplDocument1 UIMeetGoogleDriveOneplDocument1
        {
            get
            {
                if ((this.mUIMeetGoogleDriveOneplDocument1 == null))
                {
                    this.mUIMeetGoogleDriveOneplDocument1 = new UIMeetGoogleDriveOneplDocument1(this);
                }
                return this.mUIMeetGoogleDriveOneplDocument1;
            }
        }
        
        public UINotificationToolBar UINotificationToolBar
        {
            get
            {
                if ((this.mUINotificationToolBar == null))
                {
                    this.mUINotificationToolBar = new UINotificationToolBar(this);
                }
                return this.mUINotificationToolBar;
            }
        }
        
        public UIMyDriveGoogleDriveDocument UIMyDriveGoogleDriveDocument
        {
            get
            {
                if ((this.mUIMyDriveGoogleDriveDocument == null))
                {
                    this.mUIMyDriveGoogleDriveDocument = new UIMyDriveGoogleDriveDocument(this);
                }
                return this.mUIMyDriveGoogleDriveDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMSNUKHotmailOutlookSDocument mUIMSNUKHotmailOutlookSDocument;
        
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIMeetGoogleDriveOneplDocument mUIMeetGoogleDriveOneplDocument;
        
        private UIMeetGoogleDriveOneplDocument1 mUIMeetGoogleDriveOneplDocument1;
        
        private UINotificationToolBar mUINotificationToolBar;
        
        private UIMyDriveGoogleDriveDocument mUIMyDriveGoogleDriveDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMSNUKHotmailOutlookSDocument : HtmlDocument
    {
        
        public UIMSNUKHotmailOutlookSDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/en-gb/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.msn.com/en-gb/?ocid=iehp";
            this.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIHeadercommonCustom
        {
            get
            {
                if ((this.mUIHeadercommonCustom == null))
                {
                    this.mUIHeadercommonCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIHeadercommonCustom.SearchProperties["TagName"] = "HEADER";
                    this.mUIHeadercommonCustom.SearchProperties["Id"] = "header-common";
                    this.mUIHeadercommonCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIHeadercommonCustom.FilterProperties["Class"] = "no-overlay";
                    this.mUIHeadercommonCustom.FilterProperties["ControlDefinition"] = "class=\"no-overlay\" id=\"header-common\" ro";
                    this.mUIHeadercommonCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIHeadercommonCustom.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
                    #endregion
                }
                return this.mUIHeadercommonCustom;
            }
        }
        
        public HtmlEdit UIQEdit
        {
            get
            {
                if ((this.mUIQEdit == null))
                {
                    this.mUIQEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIQEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "q";
                    this.mUIQEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "q";
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"q\" tabindex=\"1\" id=\"q\" accesskey=\"";
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIQEdit.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
                    #endregion
                }
                return this.mUIQEdit;
            }
        }
        
        public UIMainCustom UIMainCustom
        {
            get
            {
                if ((this.mUIMainCustom == null))
                {
                    this.mUIMainCustom = new UIMainCustom(this);
                }
                return this.mUIMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIHeadercommonCustom;
        
        private HtmlEdit mUIQEdit;
        
        private UIMainCustom mUIMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainCustom : HtmlCustom
    {
        
        public UIMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "main";
            this.SearchProperties["Id"] = "main";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"main\" role=\"main\" data-m=\'{\"i\":30,\"n";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIOneNoteHyperlink
        {
            get
            {
                if ((this.mUIOneNoteHyperlink == null))
                {
                    this.mUIOneNoteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOneNoteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOneNoteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOneNoteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_blank";
                    this.mUIOneNoteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "OneNote";
                    this.mUIOneNoteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/notebooks";
                    this.mUIOneNoteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOneNoteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://www.onenote.com/notebooks?WT.mc_id=MSN_OneNote_TopMenu&auth=1";
                    this.mUIOneNoteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIOneNoteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"https://www.onenote.com/notebooks?";
                    this.mUIOneNoteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIOneNoteHyperlink.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
                    #endregion
                }
                return this.mUIOneNoteHyperlink;
            }
        }
        
        public HtmlImage UIScHomePagei710153961Image
        {
            get
            {
                if ((this.mUIScHomePagei710153961Image == null))
                {
                    this.mUIScHomePagei710153961Image = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIScHomePagei710153961Image.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIScHomePagei710153961Image.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIScHomePagei710153961Image.SearchProperties[HtmlImage.PropertyNames.Alt] = null;
                    this.mUIScHomePagei710153961Image.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/sc/HomePage/i/71/015396167bb5e7dd935c6776d4b2ba.jpg";
                    this.mUIScHomePagei710153961Image.FilterProperties[HtmlImage.PropertyNames.Src] = "http://static-hp-neu.s-msn.com/sc/HomePage/i/71/015396167bb5e7dd935c6776d4b2ba.jp" +
                        "g";
                    this.mUIScHomePagei710153961Image.FilterProperties[HtmlImage.PropertyNames.Class] = "image loaded";
                    this.mUIScHomePagei710153961Image.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "width=\"222\" class=\"image loaded\" src=\"ht";
                    this.mUIScHomePagei710153961Image.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "3";
                    this.mUIScHomePagei710153961Image.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
                    #endregion
                }
                return this.mUIScHomePagei710153961Image;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIOneNoteHyperlink;
        
        private HtmlImage mUIScHomePagei710153961Image;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Bing";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("MSN UK | Hotmail, Outlook, Skype, Bing, Latest News, Photos and Videos");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMeetGoogleDriveOneplDocument : HtmlDocument
    {
        
        public UIMeetGoogleDriveOneplDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Meet Google Drive – One place for all your files";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceLogin";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://accounts.google.com/ServiceLogin?service=wise&passive=1209600&continue=ht" +
                "tps://drive.google.com/drive/my-drive&followup=https://drive.google.com/drive/my" +
                "-drive";
            this.WindowTitles.Add("Meet Google Drive – One place for all your files");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" id=\"Email\" spellcheck=\"fals";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "11";
                    this.mUIEmailEdit.WindowTitles.Add("Meet Google Drive – One place for all your files");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Passwd";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Passwd\" id=\"Passwd\" type=\"password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "12";
                    this.mUIPasswordEdit.WindowTitles.Add("Meet Google Drive – One place for all your files");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlInputButton UISigninButton
        {
            get
            {
                if ((this.mUISigninButton == null))
                {
                    this.mUISigninButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISigninButton.SearchProperties[HtmlButton.PropertyNames.Id] = "signIn";
                    this.mUISigninButton.SearchProperties[HtmlButton.PropertyNames.Name] = "signIn";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Sign in";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.Class] = "rc-button rc-button-submit";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"signIn\" class=\"rc-button rc-button";
                    this.mUISigninButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "13";
                    this.mUISigninButton.WindowTitles.Add("Meet Google Drive – One place for all your files");
                    #endregion
                }
                return this.mUISigninButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlInputButton mUISigninButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMeetGoogleDriveOneplDocument1 : HtmlDocument
    {
        
        public UIMeetGoogleDriveOneplDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Meet Google Drive – One place for all your files";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ServiceLoginAuth";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://accounts.google.com/ServiceLoginAuth";
            this.WindowTitles.Add("Meet Google Drive – One place for all your files");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Passwd";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Passwd";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-error";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Passwd\" class=\"form-error\" id=\"Pas";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUIPasswordEdit.WindowTitles.Add("Meet Google Drive – One place for all your files");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINotificationToolBar : WinToolBar
    {
        
        public UINotificationToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Notification";
            this.WindowTitles.Add("My Drive - Google Drive");
            #endregion
        }
        
        #region Properties
        public WinButton UINotforthissiteButton
        {
            get
            {
                if ((this.mUINotforthissiteButton == null))
                {
                    this.mUINotforthissiteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINotforthissiteButton.SearchProperties[WinButton.PropertyNames.Name] = "Not for this site";
                    this.mUINotforthissiteButton.WindowTitles.Add("My Drive - Google Drive");
                    #endregion
                }
                return this.mUINotforthissiteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINotforthissiteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMyDriveGoogleDriveDocument : HtmlDocument
    {
        
        public UIMyDriveGoogleDriveDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Drive - Google Drive";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/drive/my-drive";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://drive.google.com/drive/my-drive";
            this.WindowTitles.Add("My Drive - Google Drive");
            #endregion
        }
        
        #region Properties
        public UIDrive_main_pagePane UIDrive_main_pagePane
        {
            get
            {
                if ((this.mUIDrive_main_pagePane == null))
                {
                    this.mUIDrive_main_pagePane = new UIDrive_main_pagePane(this);
                }
                return this.mUIDrive_main_pagePane;
            }
        }
        
        public HtmlDiv UINewfolderPane
        {
            get
            {
                if ((this.mUINewfolderPane == null))
                {
                    this.mUINewfolderPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUINewfolderPane.SearchProperties[HtmlDiv.PropertyNames.Id] = ":48";
                    this.mUINewfolderPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINewfolderPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New folder...";
                    this.mUINewfolderPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINewfolderPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "j-D";
                    this.mUINewfolderPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"j-D\" id=\":48\" role=\"menuitem\" unselectable=\"on\"";
                    this.mUINewfolderPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "592";
                    this.mUINewfolderPane.WindowTitles.Add("My Drive - Google Drive");
                    #endregion
                }
                return this.mUINewfolderPane;
            }
        }
        
        public HtmlDiv UINewfolderUploadfilesPane
        {
            get
            {
                if ((this.mUINewfolderUploadfilesPane == null))
                {
                    this.mUINewfolderUploadfilesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUINewfolderUploadfilesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUINewfolderUploadfilesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINewfolderUploadfilesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "New folder...\r\n\r\n\r\n\r\n\r\n\r\n\r\nUpload files.";
                    this.mUINewfolderUploadfilesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINewfolderUploadfilesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "j-A j-A-Nj a-nf-A";
                    this.mUINewfolderUploadfilesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"0\" class=\"j-A j-A-Nj a-nf-A\" role=\"menu\" aria-haspopup=\"true\" style=\"le" +
                        "ft: 1014.66px; top: 526px; visibility: visible; max-height: 920px;\" hidefocus=\"\"" +
                        " unselectable=\"on\"";
                    this.mUINewfolderUploadfilesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "591";
                    this.mUINewfolderUploadfilesPane.WindowTitles.Add("My Drive - Google Drive");
                    #endregion
                }
                return this.mUINewfolderUploadfilesPane;
            }
        }
        
        public UIUploadfilesPane UIUploadfilesPane
        {
            get
            {
                if ((this.mUIUploadfilesPane == null))
                {
                    this.mUIUploadfilesPane = new UIUploadfilesPane(this);
                }
                return this.mUIUploadfilesPane;
            }
        }
        #endregion
        
        #region Fields
        private UIDrive_main_pagePane mUIDrive_main_pagePane;
        
        private HtmlDiv mUINewfolderPane;
        
        private HtmlDiv mUINewfolderUploadfilesPane;
        
        private UIUploadfilesPane mUIUploadfilesPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDrive_main_pagePane : HtmlDiv
    {
        
        public UIDrive_main_pagePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "drive_main_page";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Drive\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "a-pa-ob-Gq-aa";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"a-pa-ob-Gq-aa\" id=\"drive_main_page\" style=\"left: 0px; top: 60px;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "93";
            this.WindowTitles.Add("My Drive - Google Drive");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICodeduiPane
        {
            get
            {
                if ((this.mUICodeduiPane == null))
                {
                    this.mUICodeduiPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICodeduiPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICodeduiPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICodeduiPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = ".\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncodedui";
                    this.mUICodeduiPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICodeduiPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "a-Gg-Hf-zo";
                    this.mUICodeduiPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"a-Gg-Hf-zo\" role=\"presentation\" data-target=\"selectionArea\"";
                    this.mUICodeduiPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "306";
                    this.mUICodeduiPane.WindowTitles.Add("My Drive - Google Drive");
                    #endregion
                }
                return this.mUICodeduiPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICodeduiPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUploadfilesPane : HtmlDiv
    {
        
        public UIUploadfilesPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = ":4a";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Upload files...";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "j-D";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"j-D\" id=\":4a\" role=\"menuitem\" unselectable=\"on\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "597";
            this.WindowTitles.Add("My Drive - Google Drive");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIUploadfilesPane1
        {
            get
            {
                if ((this.mUIUploadfilesPane1 == null))
                {
                    this.mUIUploadfilesPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIUploadfilesPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIUploadfilesPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIUploadfilesPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Upload files...";
                    this.mUIUploadfilesPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIUploadfilesPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "a-D-P";
                    this.mUIUploadfilesPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"a-D-P\" unselectable=\"on\"";
                    this.mUIUploadfilesPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "600";
                    this.mUIUploadfilesPane1.WindowTitles.Add("My Drive - Google Drive");
                    #endregion
                }
                return this.mUIUploadfilesPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIUploadfilesPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIChooseFiletoUploadWindow : WinWindow
    {
        
        public UIChooseFiletoUploadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Choose File to Upload";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public UITreeViewWindow UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow(this);
                }
                return this.mUIOpenWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewWindow mUITreeViewWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIOpenWindow mUIOpenWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeViewWindow : WinWindow
    {
        
        public UITreeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public UITreeViewTree UITreeViewTree
        {
            get
            {
                if ((this.mUITreeViewTree == null))
                {
                    this.mUITreeViewTree = new UITreeViewTree(this);
                }
                return this.mUITreeViewTree;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewTree mUITreeViewTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeViewTree : WinTree
    {
        
        public UITreeViewTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTree.PropertyNames.Name] = "Namespace Tree Control";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public UIDesktopTreeItem UIDesktopTreeItem
        {
            get
            {
                if ((this.mUIDesktopTreeItem == null))
                {
                    this.mUIDesktopTreeItem = new UIDesktopTreeItem(this);
                }
                return this.mUIDesktopTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopTreeItem mUIDesktopTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDesktopTreeItem : WinTreeItem
    {
        
        public UIDesktopTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Desktop";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public UIThisPCTreeItem UIThisPCTreeItem
        {
            get
            {
                if ((this.mUIThisPCTreeItem == null))
                {
                    this.mUIThisPCTreeItem = new UIThisPCTreeItem(this);
                }
                return this.mUIThisPCTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIThisPCTreeItem mUIThisPCTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIThisPCTreeItem : WinTreeItem
    {
        
        public UIThisPCTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "This PC";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIDownloadsTreeItem
        {
            get
            {
                if ((this.mUIDownloadsTreeItem == null))
                {
                    this.mUIDownloadsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIDownloadsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Downloads";
                    this.mUIDownloadsTreeItem.SearchProperties["Value"] = "2";
                    this.mUIDownloadsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIDownloadsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIDownloadsTreeItem.WindowTitles.Add("Choose File to Upload");
                    #endregion
                }
                return this.mUIDownloadsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIDownloadsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public UITestDataListItem UITestDataListItem
        {
            get
            {
                if ((this.mUITestDataListItem == null))
                {
                    this.mUITestDataListItem = new UITestDataListItem(this);
                }
                return this.mUITestDataListItem;
            }
        }
        #endregion
        
        #region Fields
        private UITestDataListItem mUITestDataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITestDataListItem : WinListItem
    {
        
        public UITestDataListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "TestData";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Choose File to Upload");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Choose File to Upload");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Choose File to Upload");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIThepageatwwwdemoguruWindow : WinWindow
    {
        
        public UIThepageatwwwdemoguruWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "The page at www.demo.guru99.com says:";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("The page at www.demo.guru99.com says:");
            #endregion
        }
        
        #region Properties
        public WinControl UIThepageatwwwdemoguruDialog
        {
            get
            {
                if ((this.mUIThepageatwwwdemoguruDialog == null))
                {
                    this.mUIThepageatwwwdemoguruDialog = new WinControl(this);
                    #region Search Criteria
                    this.mUIThepageatwwwdemoguruDialog.SearchProperties[UITestControl.PropertyNames.Name] = "The page at www.demo.guru99.com says:";
                    this.mUIThepageatwwwdemoguruDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    this.mUIThepageatwwwdemoguruDialog.WindowTitles.Add("The page at www.demo.guru99.com says:");
                    #endregion
                }
                return this.mUIThepageatwwwdemoguruDialog;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIThepageatwwwdemoguruDialog;
        #endregion
    }
}
